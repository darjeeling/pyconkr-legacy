# Generated by Django 2.1.5 on 2019-03-13 14:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('name_ko', models.CharField(db_index=True, max_length=100, null=True)),
                ('name_en', models.CharField(db_index=True, max_length=100, null=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('visible', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('name_ko', models.CharField(max_length=50, null=True)),
                ('name_en', models.CharField(max_length=50, null=True)),
                ('conference_started_at', models.DateField(blank=True, null=True)),
                ('conference_finished_at', models.DateField(blank=True, null=True)),
                ('sprint_started_at', models.DateField(blank=True, null=True)),
                ('sprint_finished_at', models.DateField(blank=True, null=True)),
                ('tutorial_started_at', models.DateField(blank=True, null=True)),
                ('tutorial_finished_at', models.DateField(blank=True, null=True)),
                ('earlybird_started_at', models.DateTimeField(blank=True, null=True)),
                ('earlybird_finished_at', models.DateTimeField(blank=True, null=True)),
                ('presentation_proposal_started_at', models.DateTimeField(blank=True, null=True)),
                ('presentation_proposal_finished_at', models.DateTimeField(blank=True, null=True)),
                ('sprint_proposal_started_at', models.DateTimeField(blank=True, null=True)),
                ('sprint_proposal_finished_at', models.DateTimeField(blank=True, null=True)),
                ('tutorial_proposal_started_at', models.DateTimeField(blank=True, null=True)),
                ('tutorial_proposal_finished_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Difficulty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('name_ko', models.CharField(db_index=True, max_length=100, null=True)),
                ('name_en', models.CharField(db_index=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OAuthSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('env_name', models.CharField(max_length=50, unique=True)),
                ('enable', models.BooleanField(default=True)),
                ('github_client_id', models.CharField(blank=True, max_length=100, null=True)),
                ('github_client_secret', models.CharField(blank=True, max_length=100, null=True)),
                ('google_client_id', models.CharField(blank=True, max_length=100, null=True)),
                ('google_client_secret', models.CharField(blank=True, max_length=100, null=True)),
                ('facebook_client_id', models.CharField(blank=True, max_length=100, null=True)),
                ('facebook_client_secret', models.CharField(blank=True, max_length=100, null=True)),
                ('naver_client_id', models.CharField(blank=True, max_length=100, null=True)),
                ('naver_client_secret', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=50)),
                ('name_ko', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('name_en', models.CharField(blank=True, default='', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oauth_type', models.CharField(choices=[('1', 'github'), ('2', 'google'), ('3', 'facebook'), ('4', 'naver')], default='1', max_length=1)),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('name_ko', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('name_en', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('bio', models.TextField(blank=True, default='', max_length=4000)),
                ('bio_ko', models.TextField(blank=True, default='', max_length=4000, null=True)),
                ('bio_en', models.TextField(blank=True, default='', max_length=4000, null=True)),
                ('email', models.EmailField(blank=True, default='', max_length=254)),
                ('phone', models.CharField(blank=True, default='', max_length=100)),
                ('organization', models.CharField(blank=True, default='', max_length=100)),
                ('nationality', models.CharField(blank=True, default='', max_length=100)),
                ('image', sorl.thumbnail.fields.ImageField(blank=True, default='', upload_to='profile')),
                ('avatar_url', models.CharField(blank=True, default='', max_length=500)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True)),
                ('name_ko', models.CharField(max_length=255, null=True)),
                ('name_en', models.CharField(max_length=255, null=True)),
                ('desc', models.TextField(blank=True, default='')),
                ('desc_ko', models.TextField(blank=True, default='', null=True)),
                ('desc_en', models.TextField(blank=True, default='', null=True)),
                ('price', models.IntegerField(default=0)),
                ('visible', models.BooleanField(default=False)),
                ('language', models.CharField(choices=[('E', 'English'), ('K', 'Korean')], default='K', max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('name_ko', models.CharField(blank=True, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, max_length=255, null=True)),
                ('desc', models.TextField(blank=True, null=True)),
                ('desc_ko', models.TextField(blank=True, null=True)),
                ('desc_en', models.TextField(blank=True, null=True)),
                ('image', sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to='sponsor')),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SponsorLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('name_ko', models.CharField(blank=True, max_length=255, null=True)),
                ('name_en', models.CharField(blank=True, max_length=255, null=True)),
                ('price', models.IntegerField(default=0)),
                ('limit', models.IntegerField(default=0, help_text='스폰서 등급의 구좌수')),
                ('ticket_count', models.IntegerField(default=0, help_text='스폰서에게 제공되는 티켓의 수')),
                ('presentation_count', models.IntegerField(default=0, help_text='스폰서에서 할 수 있는 스폰서 발표의 개수')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ConferenceTicket',
            fields=[
                ('ticket_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Ticket')),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Conference')),
            ],
            bases=('api.ticket',),
        ),
        migrations.CreateModel(
            name='Presentation',
            fields=[
                ('program_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Program')),
                ('short_desc', models.TextField(blank=True, default='')),
                ('short_desc_ko', models.TextField(blank=True, default='', null=True)),
                ('short_desc_en', models.TextField(blank=True, default='', null=True)),
                ('background_desc', models.TextField(blank=True, default='')),
                ('background_desc_ko', models.TextField(blank=True, default='', null=True)),
                ('background_desc_en', models.TextField(blank=True, default='', null=True)),
                ('submitted', models.BooleanField(default=False)),
                ('accepted', models.BooleanField(default=False)),
                ('duration', models.CharField(choices=[('S', '25'), ('L', '40')], default='S', max_length=1)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('slide_url', models.CharField(blank=True, default='', max_length=255)),
                ('pdf_url', models.CharField(blank=True, default='', max_length=255)),
                ('video_url', models.CharField(blank=True, default='', max_length=255)),
                ('recordable', models.BooleanField(default=True)),
                ('is_presented_before', models.BooleanField(default=False)),
                ('place_presented_before', models.CharField(blank=True, default='', max_length=255)),
                ('presented_slide_url_before', models.CharField(blank=True, default='', max_length=255)),
                ('question', models.TextField(blank=True, default='')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Category')),
                ('difficulty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Difficulty')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Place')),
            ],
            bases=('api.program',),
        ),
        migrations.CreateModel(
            name='ProgramTicket',
            fields=[
                ('ticket_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.Ticket')),
            ],
            bases=('api.ticket',),
        ),
        migrations.AddField(
            model_name='ticket',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sponsor',
            name='level',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.SponsorLevel'),
        ),
        migrations.AddField(
            model_name='sponsor',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sponsor_owner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sponsor',
            name='ticket_users',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sponsor_ticket_users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='YoungcoderTicket',
            fields=[
                ('programticket_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.ProgramTicket')),
                ('need_laptop', models.BooleanField(default=False)),
            ],
            bases=('api.programticket',),
        ),
        migrations.AddField(
            model_name='programticket',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Program'),
        ),
    ]
